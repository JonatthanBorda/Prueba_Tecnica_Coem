// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prueba_Tecnica_Coem.Models;

#nullable disable

namespace Prueba_Tecnica_Coem.Migrations
{
    [DbContext(typeof(DbPortalCoemContext))]
    partial class DbPortalCoemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Aplicacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaAplicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdDemandante")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdVacante")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Aplicaci__3214EC076EFB285F");

                    b.HasIndex("IdDemandante");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdVacante");

                    b.ToTable("Aplicaciones");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Demandante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ExperienciaAnterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdNivelEducativo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Demandan__3214EC07CB41699E");

                    b.HasIndex("IdNivelEducativo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Demandantes");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Empleadore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Industria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Localizacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumeroEmpleados")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Empleado__3214EC0739502845");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Empleadores");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.EstadoAplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__EstadoAp__3214EC073C4A4A52");

                    b.ToTable("EstadoAplicacion", (string)null);
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.NivelEducativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__NivelEdu__3214EC0785C0F89B");

                    b.ToTable("NivelEducativo", (string)null);
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TipoUsua__3214EC075EC6FAE8");

                    b.ToTable("TipoUsuario", (string)null);
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC072CC3DD88");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Vacante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEmpleador")
                        .HasColumnType("int");

                    b.Property<string>("Requisitos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Vacantes__3214EC07702C3CC1");

                    b.HasIndex("IdEmpleador");

                    b.ToTable("Vacantes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Aplicacione", b =>
                {
                    b.HasOne("Prueba_Tecnica_Coem.Models.Demandante", "IdDemandanteNavigation")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("IdDemandante")
                        .IsRequired()
                        .HasConstraintName("FK__Aplicacio__IdDem__38996AB5");

                    b.HasOne("Prueba_Tecnica_Coem.Models.EstadoAplicacion", "IdEstadoNavigation")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("FK__Aplicacio__IdEst__398D8EEE");

                    b.HasOne("Prueba_Tecnica_Coem.Models.Vacante", "IdVacanteNavigation")
                        .WithMany("Aplicaciones")
                        .HasForeignKey("IdVacante")
                        .IsRequired()
                        .HasConstraintName("FK__Aplicacio__IdVac__37A5467C");

                    b.Navigation("IdDemandanteNavigation");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdVacanteNavigation");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Demandante", b =>
                {
                    b.HasOne("Prueba_Tecnica_Coem.Models.NivelEducativo", "IdNivelEducativoNavigation")
                        .WithMany("Demandantes")
                        .HasForeignKey("IdNivelEducativo")
                        .IsRequired()
                        .HasConstraintName("FK__Demandant__IdNiv__2C3393D0");

                    b.HasOne("Prueba_Tecnica_Coem.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Demandantes")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Demandant__IdUsu__2B3F6F97");

                    b.Navigation("IdNivelEducativoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Empleadore", b =>
                {
                    b.HasOne("Prueba_Tecnica_Coem.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Empleadores")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Empleador__IdUsu__2F10007B");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Usuario", b =>
                {
                    b.HasOne("Prueba_Tecnica_Coem.Models.TipoUsuario", "IdTipoUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Usuarios__IdTipo__267ABA7A");

                    b.Navigation("IdTipoUsuarioNavigation");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Vacante", b =>
                {
                    b.HasOne("Prueba_Tecnica_Coem.Models.Empleadore", "IdEmpleadorNavigation")
                        .WithMany("Vacantes")
                        .HasForeignKey("IdEmpleador")
                        .IsRequired()
                        .HasConstraintName("FK__Vacantes__IdEmpl__31EC6D26");

                    b.Navigation("IdEmpleadorNavigation");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Demandante", b =>
                {
                    b.Navigation("Aplicaciones");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Empleadore", b =>
                {
                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.EstadoAplicacion", b =>
                {
                    b.Navigation("Aplicaciones");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.NivelEducativo", b =>
                {
                    b.Navigation("Demandantes");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Usuario", b =>
                {
                    b.Navigation("Demandantes");

                    b.Navigation("Empleadores");
                });

            modelBuilder.Entity("Prueba_Tecnica_Coem.Models.Vacante", b =>
                {
                    b.Navigation("Aplicaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
